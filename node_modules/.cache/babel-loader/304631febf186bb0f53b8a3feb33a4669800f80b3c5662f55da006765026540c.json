{"ast":null,"code":"var _jsxFileName = \"/Users/apoxie/webapps/autoDCF/frontend/src/Home.js\",\n  _s = $RefreshSig$();\nimport './Home.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [data, setData] = useState([{}]);\n  const sendData = data => {\n    fetch(\"https://apoxie.pythonanywhere.com/connect4\", {\n      method: \"POST\",\n      cache: \"no-store\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(responseData => {\n      console.log(\"Server Response:\", responseData);\n    }).catch(error => {\n      console.error(\"Error sending data:\", error);\n    });\n  };\n  const handleButtonClick = (row, col, id) => {\n    console.log(`Button clicked at row ${row}, column ${col}`);\n    if (!isGameActive || !isPlayerTurn) {\n      return;\n    }\n    if (gridData[row][col].isClicked || gridData[row][col].AIPlace) {\n      setInvalid(true);\n      return;\n    } else if (row < 5 && !gridData[row + 1][col].isClicked && !gridData[row + 1][col].AIPlace) {\n      setInvalid(true);\n      return;\n    }\n    setInvalid(false);\n    // Update the grid data to reflect the clicked state\n    const newGridData = gridData.map(rowData => rowData.map(cell => {\n      if (cell.id === id) {\n        return {\n          ...cell,\n          isClicked: true\n        }; // Return a new object for the clicked cell\n      }\n      return {\n        ...cell\n      }; // Return a new object for other cells\n    }));\n    // modifyng board with user input\n    setGridData(newGridData);\n    let board = [];\n    for (let i = 0; i < 6; i++) {\n      let currRow = [];\n      for (let j = 0; j < 7; j++) {\n        let val = 0;\n        if (newGridData[i][j].isClicked) {\n          val = 1;\n        } else if (newGridData[i][j].AIPlace) {\n          val = -1;\n        }\n        if (j === 3) {\n          val = val * 8;\n        } else if (j === 2 || j === 4) {\n          val = val * 4;\n        } else if (j === 1 || j === 5) {\n          val = val * 2;\n        }\n        currRow.push(val);\n      }\n      board.push(currRow);\n    }\n    let data = {\n      \"x\": row,\n      \"y\": col,\n      \"board\": board\n    };\n    console.log(data);\n    sendData(data);\n    setIsPlayerTurn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"AutoDCF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userInput\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"hZeuXr9ZAsNiIKcLFSK3zH9YGME=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Home","_s","data","setData","sendData","fetch","method","cache","headers","body","JSON","stringify","then","res","json","responseData","console","log","catch","error","handleButtonClick","row","col","id","isGameActive","isPlayerTurn","gridData","isClicked","AIPlace","setInvalid","newGridData","map","rowData","cell","setGridData","board","i","currRow","j","val","push","setIsPlayerTurn","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleClick","_c","$RefreshReg$"],"sources":["/Users/apoxie/webapps/autoDCF/frontend/src/Home.js"],"sourcesContent":["import './Home.css'\nimport { useState } from 'react'\n\nconst Home = () => {\n    const [data, setData] = useState([{}])\n    const sendData = (data) => {\n        fetch(\"https://apoxie.pythonanywhere.com/connect4\", {\n            method: \"POST\",\n            cache: \"no-store\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data)\n        })\n            .then(\n                res => res.json())\n            .then(responseData => {\n                console.log(\"Server Response:\", responseData);\n            })\n            .catch(error => {\n                console.error(\"Error sending data:\", error);\n            });\n    };\n    const handleButtonClick = (row, col, id) => {\n        console.log(`Button clicked at row ${row}, column ${col}`);\n        if (!isGameActive || !isPlayerTurn) {\n            return\n        }\n        if (gridData[row][col].isClicked || gridData[row][col].AIPlace) {\n            setInvalid(true)\n            return\n        } else if (row < 5 && !gridData[row + 1][col].isClicked && !gridData[row + 1][col].AIPlace) {\n            setInvalid(true)\n            return\n        }\n        setInvalid(false)\n        // Update the grid data to reflect the clicked state\n        const newGridData = gridData.map(rowData => rowData.map(cell => {\n            if (cell.id === id) {\n                return { ...cell, isClicked: true }; // Return a new object for the clicked cell\n            }\n            return { ...cell }; // Return a new object for other cells\n        }));\n        // modifyng board with user input\n        setGridData(newGridData);\n        let board = []\n        for (let i = 0; i < 6; i++) {\n            let currRow = [];\n            for (let j = 0; j < 7; j++) {\n                let val = 0\n                if (newGridData[i][j].isClicked) {\n                    val = 1\n                } else if (newGridData[i][j].AIPlace) {\n                    val = -1\n                }\n                if (j === 3) {\n                    val = val * 8\n                } else if (j === 2 || j === 4) {\n                    val = val * 4\n                } else if (j === 1 || j === 5) {\n                    val = val * 2\n                }\n                currRow.push(val)\n            }\n            board.push(currRow)\n        }\n        let data = { \"x\": row, \"y\": col, \"board\": board }\n        console.log(data)\n        sendData(data)\n        setIsPlayerTurn(false);\n    };\n    return (\n        <div>\n            <h1 className='title'>AutoDCF</h1>\n\n            <div className='userInput'>\n                <button onClick={handleClick}></button>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}